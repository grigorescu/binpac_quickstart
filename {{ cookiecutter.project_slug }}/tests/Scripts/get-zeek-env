#! /bin/sh
#
# BTest helper for getting values for Zeek-related environment variables.

base=`dirname $0`
zeek_dist=`cat ${base}/../../build/CMakeCache.txt 2> /dev/null | grep ZEEK_DIST | cut -d = -f 2`

if [ -n "${zeek_dist}" ]; then
    if [ "$1" = "zeekpath" ]; then
        ${zeek_dist}/build/zeek-path-dev
    elif [ "$1" = "zeek_plugin_path" ]; then
        ( cd ${base}/../.. && pwd )
    elif [ "$1" = "path" ]; then
        echo ${zeek_dist}/build/src:${zeek_dist}/aux/btest:${base}/:${zeek_dist}/aux/zeek-cut:$PATH
    else
        echo "usage: `basename $0` <var>" >&2
        exit 1
    fi
else
    # Use Zeek installation for testing. In this case zeek-config must be in PATH.
    if ! which zeek-config >/dev/null; then
        if ! which bro-config >/dev/null; then
            echo "zeek-config and bro-config not found" >&2
            exit 1
        fi
        if [ "$1" == "zeekpath" ]; then
            bro-config --bropath
        elif [ "$1" == "zeek_plugin_path" ]; then
            ( cd ${base}/../../ && pwd )
        elif [ "$1" == "path" ]; then
            echo ${PATH}
        else
            echo "usage: `basename $0` <var>" >&2
            exit 1
        fi

   else
        if [ "$1" = "zeekpath" ]; then
            zeek-config --zeekpath
        elif [ "$1" = "zeek_plugin_path" ]; then
            ( cd ${base}/../.. && pwd )
        elif [ "$1" = "path" ]; then
            echo ${PATH}
        else
            echo "usage: `basename $0` <var>" >&2
            exit 1
        fi
    fi
fi
